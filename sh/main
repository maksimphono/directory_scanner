#!/bin/bash

set -euo pipefail

if [[ "$#" -eq 0 ]]; then
    echo "Please provide path a to directory as a first argument"
    exit 1
fi

# Initialize variables

INPUT_DIR_PATH=$1
INPUT_DIR_NAME=$(basename "$INPUT_DIR_PATH")

if [[ ! -d "$INPUT_DIR_PATH" ]]; then
    echo "Provided directory $INPUT_DIR_PATH can't be found"
    exit 1
fi 

shift
ORIGINAL_ARGS=("$@")
IMG_OUTPUT_PATH="$INPUT_DIR_NAME.png"

while [[ "$#" -gt 0 ]]; do
    case "$1" in
        -o)
            if [[ -n "$2" && ! "$2" =~ ^- ]]; then
                IMG_OUTPUT_PATH=$2
                shift # Consume the argument value
            else
                echo "Error: Argument for $1 is missing or invalid."
                exit 1
            fi
            ;;
        *)
            #echo "Unknown parameter passed: $1"
            ;;
    esac
    shift
done

IMG_OUTPUT_DIR_PATH=$(dirname "$IMG_OUTPUT_PATH")
IMG_OUTPUT_NAME=$(basename "$IMG_OUTPUT_PATH")
IMG_OUTPUT_EXTENSION="${IMG_OUTPUT_NAME##*.}"

if [[ ! "$IMG_OUTPUT_EXTENSION" == "png" && \
      ! "$IMG_OUTPUT_EXTENSION" == "jpg" && \
      ! "$IMG_OUTPUT_EXTENSION" == "jpeg" && \
      ! "$IMG_OUTPUT_EXTENSION" == "svg" ]]; then
    echo "Sorry, only following formats are supported: png, jpg, jpeg, svg"
    IMG_OUTPUT_EXTENSION="png"
fi

CODE_CREATOR_PATH="./code_creator.o"
PLANTUML_JAR_PATH="/home/dist/plantuml.jar"

COMMAND="$CODE_CREATOR_PATH /data/$INPUT_DIR_NAME ${ORIGINAL_ARGS[@]} | java -Djava.awt.headless=true -jar $PLANTUML_JAR_PATH -t$IMG_OUTPUT_EXTENSION -pipe > /output/$IMG_OUTPUT_NAME"


docker run \
    -it \
    --rm \
    -v "$INPUT_DIR_PATH:/data/$INPUT_DIR_NAME" \
    -v "$IMG_OUTPUT_DIR_PATH:/output" \
    dir_scanner_img:v1.0.0 \
    /bin/bash -c "$COMMAND"

echo "--- Run Complete ---"